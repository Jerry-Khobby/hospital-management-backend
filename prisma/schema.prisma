// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User {
  id       Int      @id @default(autoincrement())
  name     String
  email    String   @unique
  password String
  role     Role
  patients Patient[]
  appointments Appointment[] @relation("UserAppointments")
  prescriptions Prescription[] @relation("UserPrescriptions")
  createdAt DateTime @default(now())
}

model Patient {
  id           Int           @id @default(autoincrement())
  name         String
  age          Int
  gender       String
  contactInfo  String?
  createdById  Int
  createdBy    User          @relation(fields: [createdById], references: [id])
  appointments Appointment[]
  prescriptions Prescription[]
  createdAt    DateTime @default(now())
}

model Appointment {
  id        Int      @id @default(autoincrement())
  date      DateTime
  status    AppointmentStatus @default(PENDING)
  patientId Int
  patient   Patient  @relation(fields: [patientId], references: [id])
  doctorId  Int
  doctor    User     @relation("UserAppointments", fields: [doctorId], references: [id])
  createdAt DateTime @default(now())
}

model Prescription {
  id        Int      @id @default(autoincrement())
  medications String
  patientId  Int
  patient    Patient  @relation(fields: [patientId], references: [id])
  doctorId   Int
  doctor     User     @relation("UserPrescriptions", fields: [doctorId], references: [id])
  createdAt  DateTime @default(now())
}

enum Role {
  PATIENT
  DOCTOR
  ADMIN
  PHARMACIST
}

enum AppointmentStatus {
  PENDING
  CONFIRMED
  CANCELLED
}